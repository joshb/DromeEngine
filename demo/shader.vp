#version 120

uniform mat4 modelviewMatrix;
uniform mat4 mvpMatrix;

uniform vec3 instancePosition;

attribute vec3 vertexPosition;
attribute vec3 vertexNormal;

varying vec3 fragmentColor;

vec3
position(vec3 p)
{
	return p + instancePosition;
}

void
main()
{
	vec3 normal = (modelviewMatrix * vec4(vertexNormal, 0.0)).xyz;
	vec3 lightDir = vec3(0.0, 0.0, 1.0);

	fragmentColor = vec3(0.5, 0.5, 1.0) * dot(normal, lightDir);
	gl_Position = mvpMatrix * vec4(position(vertexPosition), 1.0);
}
